gss[1,jobinc]
gss[gss$jobinc == NA]
gss[gss$jobinc == NA,1]
gss[gss$jobinc == NA,]
gss[gss$jobinc == "Most Impt"]
gss[,gss$jobinc == "Most Impt"]
gss[gss$jobinc == "Most Impt",]
testfn <- function(df)  {
if (df$jobinc == NA & df$job)
v
q
}
testfn <- function(a,b)  { return(a+b)}
testfn(1,2)
gss[1,]
gss[1,jobinc:jobmeans]
gss[1,gss$jobinc:gss$jobmeans]
gss[1,'jobmeans']
gss[,'jobmeans' == NA]
gss[,jobmeans == NA]$
]
gss[,$jobmeans == NA]
gss[,$jobmeans]
gss[,'jobinc':'jobmeans']
gss[c("jobinc", "jobsec", "jobhour", "jobpromo", "jobmeans")]
gss[c("educ","jobinc", "jobsec", "jobhour", "jobpromo", "jobmeans")]
df
df = gss[c("educ","jobinc", "jobsec", "jobhour", "jobpromo", "jobmeans")]
df
summary(df)
if df$jobinc == NA {df$JobPri = 'No Response'}
if (df$jobinc == NA) {df$JobPri = 'No Response'}
? is.na
ifelse(is.na(df$jobinc),'No Response')
ifelse(is.na(df$jobinc),"No Response","Response")
ifelse(df$jobinc != "Most Impt" & df$jobsec != "Most Impt" & df$jobhour != "Most Impt" & df$jobpromo != "Most Impt" & df$jobmeans != "Most Impt","No Response","Response")
ifelse((df$jobinc != "Most Impt" & df$jobsec != "Most Impt" & df$jobhour != "Most Impt" & df$jobpromo != "Most Impt" & df$jobmeans != "Most Impt"),"No Response","Response")
ifelse(df$jobinc != "Most Impt" && df$jobsec != "Most Impt" && df$jobhour != "Most Impt" && df$jobpromo != "Most Impt" && df$jobmeans != "Most Impt","No Response","Response")
ifelse((df$jobinc != "Most Impt" & df$jobsec != "Most Impt" & df$jobhour != "Most Impt" & df$jobpromo != "Most Impt" & df$jobmeans != "Most Impt"),"No Response","Response")
ifelse((df$jobinc != "Most Impt" & df$jobsec != "Most Impt" & df$jobhour != "Most Impt" & df$jobpromo != "Most Impt" & df$jobmeans != "Most Impt"),"No Response","Response")
ifelse(df$jobinc != "Most Impt" & df$jobsec != "Most Impt" & df$jobhour != "Most Impt" & df$jobpromo != "Most Impt" & df$jobmeans != "Most Impt","No Response","Response")
ifelse(df$jobinc != "Most Impt" & df$jobsec != "Most Impt" & df$jobhour != "Most Impt" & df$jobpromo != "Most Impt" & df$jobmeans != "Most Impt","No Response","Response")
ifelse(df$jobinc != "Most Impt","No Response","Response")
ifelse(df$jobinc <> "Most Impt","No Response","Response")
ifelse(is.na(df$jobinc),"No Response","Response")
ifelse(df$jobinc != "Most Impt","No Response","Response")
ifelse((df$jobinc != "Most Impt"),"No Response","Response")
ifelse((df$jobinc == "Most Impt"),"No Response","Response")
ifelse(df$jobinc != "Most Impt" & df$jobsec != "Most Impt" & df$jobhour != "Most Impt" & df$jobpromo != "Most Impt" & df$jobmeans != "Most Impt","No Response","Response")
ifelse(df$jobinc == "Most Impt","JobInc",ifelse(df$jobsec == "Most Impt","JobSec",ifelse(df$jobhour == "Most Impt","JobHour",ifelse(df$jobpromo == "Most Impt","JobPromo",ifelse(df$jobmeans == "Most Impt","JobMeans","No Response","Response")))))
ifelse(df$jobinc == "Most Impt","JobInc",ifelse(df$jobsec == "Most Impt","JobSec",ifelse(df$jobhour == "Most Impt","JobHour",ifelse(df$jobpromo == "Most Impt","JobPromo",ifelse(df$jobmeans == "Most Impt","JobMeans","No Response")))))
df
df$JobPriority <- ifelse(df$jobinc == "Most Impt","JobInc",ifelse(df$jobsec == "Most Impt","JobSec",ifelse(df$jobhour == "Most Impt","JobHour",ifelse(df$jobpromo == "Most Impt","JobPromo",ifelse(df$jobmeans == "Most Impt","JobMeans","No Response")))))
df
summary(df)
df$JobPriority
df
df[,!is.na(JobPriority)]
df[1,]
!is.na(df$JobPriority)
df[!is.na(df$JobPriority),]
ifelse(df$jobinc == "Most Impt","JobInc",ifelse(df$jobsec == "Most Impt","JobSec",ifelse(df$jobhour == "Most Impt","JobHour",ifelse(df$jobpromo == "Most Impt","JobPromo",ifelse(df$jobmeans == "Most Impt","JobMeans",ifelse(is.na(df$jobmeans),"No Response")))))
)
ifelse(df$jobinc == "Most Impt","JobInc",ifelse(df$jobsec == "Most Impt","JobSec",ifelse(df$jobhour == "Most Impt","JobHour",ifelse(df$jobpromo == "Most Impt","JobPromo",ifelse(df$jobmeans == "Most Impt","JobMeans",ifelse(is.na(df$jobmeans),"No Response","Unknown Response")))))
)
ifelse(is.na(df$jobinc),"No Response",ifelse(df$jobinc == "Most Impt","JobInc",ifelse(df$jobsec == "Most Impt","JobSec",ifelse(df$jobhour == "Most Impt","JobHour",ifelse(df$jobpromo == "Most Impt","JobPromo",ifelse(df$jobmeans == "Most Impt","JobMeans","No Response"))))))
df
summary(df)
df = gss[c("educ","jobinc", "jobsec", "jobhour", "jobpromo", "jobmeans")]
df$JobPriority = ifelse(is.na(df$jobinc),"No Response",ifelse(df$jobinc == "Most Impt","JobInc",ifelse(df$jobsec == "Most Impt","JobSec",ifelse(df$jobhour == "Most Impt","JobHour",ifelse(df$jobpromo == "Most Impt","JobPromo",ifelse(df$jobmeans == "Most Impt","JobMeans","No Response"))))))
df
boxplot(df$educ ~ df$JobPriority)
plot(df$educ ~ df$JobPriority)
plot(df$educ,df$JobPriority)
xyplot(df$educ,df$JobPriority)
?plot
boxplot(df$educ ~ df$JobPriority)
barplot
barplot(df$educ ~ df$JobPriority)
barplot(df$educ,df$JobPriority)
summary(df)
?summmary
?summary
str(df)
df$JobPriority = as.factor(ifelse(is.na(df$jobinc),"No Response",ifelse(df$jobinc == "Most Impt","JobInc",ifelse(df$jobsec == "Most Impt","JobSec",ifelse(df$jobhour == "Most Impt","JobHour",ifelse(df$jobpromo == "Most Impt","JobPromo",ifelse(df$jobmeans == "Most Impt","JobMeans","No Response")))))))
summary(df)
df[is.na(JobPriority),]
is.na(df)
is.na(df$JobPriority)
df[is.na(df$JobPriority),]
df[c(is.na(df$JobPriority)),]
df[c(is.na(df$jobinc),is.na(df$jobsec),is.na(df$jobhour),is.na(df$jobpromo),is.na(df$jobmeans)),]
df$JobPriority = as.factor(ifelse(is.na(c(is.na(df$jobinc),is.na(df$jobsec),is.na(df$jobhour),is.na(df$jobpromo),is.na(df$jobmeans))),"No Response",ifelse(df$jobinc == "Most Impt","JobInc",ifelse(df$jobsec == "Most Impt","JobSec",ifelse(df$jobhour == "Most Impt","JobHour",ifelse(df$jobpromo == "Most Impt","JobPromo",ifelse(df$jobmeans == "Most Impt","JobMeans","No Response")))))))
df = gss[c("educ","jobinc", "jobsec", "jobhour", "jobpromo", "jobmeans")]
df$JobPriority = as.factor(ifelse(is.na(c(is.na(df$jobinc),is.na(df$jobsec),is.na(df$jobhour),is.na(df$jobpromo),is.na(df$jobmeans))),"No Response",ifelse(df$jobinc == "Most Impt","JobInc",ifelse(df$jobsec == "Most Impt","JobSec",ifelse(df$jobhour == "Most Impt","JobHour",ifelse(df$jobpromo == "Most Impt","JobPromo",ifelse(df$jobmeans == "Most Impt","JobMeans","No Response")))))))
df
df
summary(df)
df$JobPriority = as.factor(ifelse(is.na(df$jobinc),"No Response",ifelse(df$jobinc == "Most Impt","JobInc",ifelse(df$jobsec == "Most Impt","JobSec",ifelse(df$jobhour == "Most Impt","JobHour",ifelse(df$jobpromo == "Most Impt","JobPromo",ifelse(df$jobmeans == "Most Impt","JobMeans","No Response")))))))
summary(df)
df[c(is.na(df$jobinc),is.na(df$jobsec),is.na(df$jobhour),is.na(df$jobpromo),is.na(df$jobmeans)),]
df[c(is.na(df$jobinc),is.na(df$jobsec),is.na(df$jobhour),is.na(df$jobpromo),is.na(df$jobmeans)),]
c(is.na(df$jobinc),is.na(df$jobsec),is.na(df$jobhour),is.na(df$jobpromo),is.na(df$jobmeans))
c(is.na(df$jobinc) | is.na(df$jobsec) | is.na(df$jobhour) | is.na(df$jobpromo) | is.na(df$jobmeans))
df
c(is.na(df$JobPriority))
df[c(is.na(df$JobPriority)),]
c(is.na(df$jobinc),is.na(df$jobsec),is.na(df$jobhour),is.na(df$jobpromo),df$jobmeans != "Most Impt")
c(df$jobinc != "Most Impt" & df$jobsec != "Most Impt" & df$jobhour != "Most Impt" & df$jobpromo != "Most Impt" & df$jobmeans != "Most Impt")
df = df[c(is.na(df$jobinc),is.na(df$jobsec),is.na(df$jobhour),is.na(df$jobpromo),is.na(df$jobmeans)),]
df
df = gss[c("educ","jobinc", "jobsec", "jobhour", "jobpromo", "jobmeans")]
df[c(is.na(df$jobinc),is.na(df$jobsec),is.na(df$jobhour),is.na(df$jobpromo),is.na(df$jobmeans)),]
df$JobPriority = as.factor(ifelse(is.na(df$jobinc),"No Response",ifelse(df$jobinc == "Most Impt","JobInc",ifelse(df$jobsec == "Most Impt","JobSec",ifelse(df$jobhour == "Most Impt","JobHour",ifelse(df$jobpromo == "Most Impt","JobPromo",ifelse(df$jobmeans == "Most Impt","JobMeans","No Response")))))))
df[c(is.na(df$jobinc),is.na(df$jobsec),is.na(df$jobhour),is.na(df$jobpromo),is.na(df$jobmeans)),]
? summary
summary(df)
boxplot(df$educ~df$JobPriority)
hist(JobPriority)
hist(df$JobPriority)
hist(educ)
hist(df$educ)
mosaic(df$educ~df$JobPriority)
mosaicplot
mosaicplot(df$educ~df$JobPriority)
boxplot(df$educ ~ df$JobPriority['No Response'])
df$JobPriority["No Response"]
df$JobPriority["No Response",]
df$JobPriority[,"No Response"]
df$JobPriority[,'No Response']
df$JobPriority[1,'No Response']
df$JobPriority['No Response']
df['No Response']
df[,'JobPriority']
df['No Response']
df[df$JobPriority == 'No Response']
df[,df$JobPriority == 'No Response']
summary(df)
df[c(is.na(df$jobinc),is.na(df$jobsec),is.na(df$jobhour),is.na(df$jobpromo),is.na(df$jobmeans)),]
df[is.na(df$JobPriority)]
df[is.na(df$JobPriority),]
df[is.na(df$JobPriority),]$JobPriority <- "No Response"
df[is.na(df$JobPriority),]
name(gss)
names(gss)
df
Extracted variables of interest into a new dataframe (df) and added calculated column that indicates a respondent's "Most Impt" priority or "No Response" in the case of NA data.  Also clean up data where respondant did not answer correctly (e.g., provided responses but did not identify "Most Impt").  Also included year to see if "No Response" was due to questions not being asked during certain years.
Extracted variables of interest into a new dataframe (df) and added calculated column that indicates a respondent's "Most Impt" priority or "No Response" in the case of NA data.  Also clean up data where respondant did not answer correctly (e.g., provided responses but did not identify "Most Impt").
Extracted variables of interest into a new dataframe (df) and added calculated column that indicates a respondent's "Most Impt" priority or "No Response" in the case of NA data.
df
df = gss[c("year" ,"educ","jobinc", "jobsec", "jobhour", "jobpromo", "jobmeans")]
df$JobPriority = as.factor(ifelse(is.na(df$jobinc),"No Response",ifelse(df$jobinc == "Most Impt","JobInc",ifelse(df$jobsec == "Most Impt","JobSec",ifelse(df$jobhour == "Most Impt","JobHour",ifelse(df$jobpromo == "Most Impt","JobPromo",ifelse(df$jobmeans == "Most Impt","JobMeans","No Response")))))))
X
levels(gss$jobmeans)
df
summary(df)
df$year = is.factor(df$year)
summary(df)
df = gss[c("year" ,"educ","jobinc", "jobsec", "jobhour", "jobpromo", "jobmeans")]
df
summary(df)
df$year = as.factor(df$year)
summary(df)
barplot(df$year,df[,df$JobPriority == 'No Response'])
df[df$JobPriority == "No Response"]
df[df$JobPriority == "No Response",]
df[df$JobPriority == 'No Response',]
df
df$JobPriority = as.factor(ifelse(is.na(df$jobinc),"No Response",ifelse(df$jobinc == "Most Impt","JobInc",ifelse(df$jobsec == "Most Impt","JobSec",ifelse(df$jobhour == "Most Impt","JobHour",ifelse(df$jobpromo == "Most Impt","JobPromo",ifelse(df$jobmeans == "Most Impt","JobMeans","No Response")))))))
df
df[df$JobPriority == 'No Response',]
barplot(df$year,sum(df[df$JobPriority == 'No Response',]))
barplot(df$year,count(df[df$JobPriority == 'No Response',]))
barplot(df$year,sum(df[df$JobPriority == 'No Response',]))
count(df[df$JobPriority == 'No Response',]))
count(df[df$JobPriority == 'No Response',])
nrow(df[df$JobPriority == 'No Response',])
barplot(df$year,nrow(df[df$JobPriority == 'No Response',]))
barplot(df$year,nrow(c(df$JobPriority == 'No Response',)))
barplot(df$year,nrow(c(df$JobPriority == 'No Response')))
barplot(df$year,c(df$JobPriority == 'No Response'))
c(df$JobPriority == 'No Response')
crosstab
table
?table
table(df$year,df$JobPriority)
library(gmodels)
?crosstable
?CrossTable
CrossTable(df$year,df$JobPriority)
1 - 0.668
1 - 0.521
df
df[,df$year == "1972"]
df[,df[df$year == "1972"]
]
df[df$year == "1972",]
df[df$year == "2012",]
levels(gss$jobinc)
levels(gss$jobsec)
levels(gss$jobhour)
levels(gss$jobpromo)
levels(gss$jobmeans)
df$JobPriority = as.factor(ifelse(is.na(df$jobinc),"No Response",ifelse(df$jobinc == "Most Impt","JobInc",ifelse(df$jobsec == "Most Impt","JobSec",ifelse(df$jobhour == "Most Impt","JobHour",ifelse(df$jobpromo == "Most Impt","JobPromo",ifelse(df$jobmeans == "Most Impt","JobMeans","No Response")))))))
df
names(df)
df[,c("educ","JobPriority")]
df
df[df$year == "2012",c("educ","JobPriority")]
df = df[df$year == "2012",c("educ","JobPriority")]
df
hist(educ)
hist(df$educ)
levels(df$JobPriority)
summary(educ)
summary(df$educ)
summary(df)
tapply(df$educ,df$JobPriority,mean)
tapply(df$educ,df$JobPriority,median)
tapply(df$educ,df$JobPriority,std)
stdev
?std
tapply(df$educ,df$JobPriority,sd)
tapply(df$educ,df$JobPriority,nrow)
tapply(df$educ,df$JobPriority,nrows)
tapply(df$educ,df$JobPriority,sum)
tapply(df$educ,df$JobPriority,count)
? tapply
tapply(df$educ,df$JobPriority,mean)
tapply(df$educ,df$JobPriority,sd)
tapply(df$educ,df$JobPriority,length)
sum((df$educ-mean(df$educ))^2)
? sum
sum((df$educ-mean(df$educ))^2,na.rm = TRUE)
mean(df$educ)
mean(df$educ,na.rm = TRUE)
sum((df$educ-mean(df$educ,na.rm = TRUE))^2,na.rm = TRUE)
nrows(df)
nrow(df)
df$educ
sdg = tapply(df$educ,df$JobPriority,sd)
sdg
mg = tapply(df$educ,df$JobPriority,mean)
mg
ng = tapply(df$educ,df$JobPriority,length)
mg[1,1]
mg[1,]
mg[,1]
size(mg)
length(mg)
mg[,]
?type
typeof(mg)
mg(1)
mg
summary(mg)
str(mg)
mg
mg['JobHour']
mg[1]
df[,1]
df[,2]
df[1,]
mapply(df$educ,df$JobPriority,mean)
mapply(df$educ,mean)
? mapply
for i in 1:10
? for
)
? for
)
? endfor
levels(df$JobPriority)
length(levels(df$JobPriority))
for (lev in levels(df$JobPriority)) lev
for (lev in levels(df$JobPriority)) { print lev }
levels(df$JobPriority)
for (lev in levels(df$JobPriority)) { print(lev) }
seq(df$JobPriority)
for (lev in levels(df$JobPriority)) { print(lev) }
for (lev in levels(df$JobPriority)) {print(lev)
)
for (lev in levels(df$JobPriority)) {
print(lev)
length(df[df$JobPriority == lev,1])
}
for (lev in levels(df$JobPriority)) { print(lev) print(length(df[df$JobPriority == lev,1])) }
for (lev in levels(df$JobPriority)) { print(lev); print(length(df[df$JobPriority == lev,1])) }
for (lev in levels(df$JobPriority)) { print(lev); print(length(df[df$JobPriority == lev,1])); print(mean(df[df$JobPriority == lev,1])) }
for (lev in levels(df$JobPriority)) { print(lev); print(length(df[df$JobPriority == lev,1])); print(mean(df[df$JobPriority == lev,1])); }
for (lev in levels(df$JobPriority)) { print(lev); print(length(df[df$JobPriority == lev,1])); print(mean(df[df$JobPriority == lev,1]),na.rm = TRUE); }
for (lev in levels(df$JobPriority)) { print(lev); print(length(df[df$JobPriority == lev,1])); print(mean(df[df$JobPriority == lev,1],na.rm = TRUE)); }
for (lev in levels(df$JobPriority)) { print(lev); print(length(df[df$JobPriority == lev,1])); print(mean(df[df$JobPriority == lev,1],na.rm = TRUE)); print(mean(df$educ)) }
for (lev in levels(df$JobPriority)) { print(lev); print(length(df[df$JobPriority == lev,1])); print(mean(df[df$JobPriority == lev,1],na.rm = TRUE)); print(mean(df$educ,na.rm = TRUE)) }
for (lev in levels(df$JobPriority)) { print(lev); print(length(df[df$JobPriority == lev,1])); print(mean(df[df$JobPriority == lev,1],na.rm = TRUE)); print(mean(df$educ,na.rm = TRUE)) }
for (lev in levels(df$JobPriority)) { print(lev); ng = length(df[df$JobPriority == lev,1]); mg = mean(df[df$JobPriority == lev,1],na.rm = TRUE); mt = mean(df$educ,na.rm = TRUE); SSG += ng * (mg - mt)^2; print(SSG); }
for (lev in levels(df$JobPriority)) { print(lev); ng = length(df[df$JobPriority == lev,1]); mg = mean(df[df$JobPriority == lev,1],na.rm = TRUE); mt = mean(df$educ,na.rm = TRUE); SSG =+ ng * (mg - mt)^2; print(SSG); }
for (lev in levels(df$JobPriority)) { print(lev); ng = length(df[df$JobPriority == lev,1]); mg = mean(df[df$JobPriority == lev,1],na.rm = TRUE); mt = mean(df$educ,na.rm = TRUE); SSG = SSG +( ng * (mg - mt)^2); print(SSG); }
df
df[, c("educ", "JobPriority")]
df[df$JobPriority != "No Response", c("educ", "JobPriority")]
factor(df$JobPriority)
factors(ff)
? factor
levels(df$JobPriority,drop = TRUE)
levels(df$JobPriority)
levels(df$JobPriority) = levels(df$JobPriority[1,])
levels(df$JobPriority) = levels(df$JobPriority[1,1])
df$JobPriority = factors(df$JobPriority)
df$JobPriority = factor(df$JobPriority)
levels(df$JobPriority)
df$JobPriority = factor(df$JobPriority,drop = TRUE)
df$JobPriority[,drop = TRUE]
df$JobPriority[df$JobPriority != "No Response",drop = TRUE]
levels(df$JobPriority)
df$JobPriority = df$JobPriority[df$JobPriority != "No Response",drop = TRUE]
mapply(df$educ,df$JobPriority,mean)
df
mapply(df$educ,df$JobPriority,mean)
df$educ
?jitter
?cor
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
setwd("~/Git/RepData_PeerAssessment1")
data = read.csv("activity.csv")
data = read.csv("activity.csv")
str(data)
?sapply
? mean
?plot
?xyplot
library(ggplot2)
?xyplot
?ggplot
help(ggplot)
help(ggplot2)
ggplot2
?ggplot2
?ggplot
?doc
installed.packages
installed.packages()
help(package="ggplot2")
help(p="ggplot2")
help(p="lattice")
library(lattice)
xyplot(mean(data$steps) ~ interval)
plot(interval,mean(data$steps))
plot(data$interval,mean(data$steps),type = "l")
xyplot(mean(data$steps) ~ interval,type = "l")
xyplot(mean(steps) ~ interval,type = "l",data = data)
xyplot(mean(steps) ~ as.character(interval),type = "l",data = data)
head(data,50)
?aggregate
aggregate(data = data,steps,interval,FUN="mean")
aggregate(data$steps~data$interval,FUN="mean")
data 1 = aggregate(data$steps~data$interval,FUN="mean")
data1 = aggregate(data$steps~data$interval,FUN="mean")
plot(data[:,1],data[:,2])
plot(data[,1],data[,2])
plot(data[,1],data[,2],type="l")
xyplot(data[,1]~data[,2],type="l")
barplot(data[,1]~data[,2],type="l")
xyplot(data[,2]~data[,1],type="l")
xyplot(data1[,2]~data1[,1],type="l")
names(data1)
names(data1)
names(data1) = c("interval","steps")
names(data1)
fit1 = aggregate(steps~interval,FUN="mean",data=data)
xyplot(steps~interval,type="l",data=fit1)
names(fit1)[2]="avg_steps"
names(fit1)
names(fit1)[2]="steps"
names(fit2)[2]="steps"
names(fit1)[2]="avg_steps"
xyplot(avg_steps~interval,type="l",data=fit1)
max(fit2$avg_steps)
max(fit1$avg_steps)
?max
?find
?aggregate
head(fit1)
head(sort(fit1$avg_steps,dec=TRUE))
head(sort(fit1$avg_steps~fit1$interval,dec=TRUE))
head(sort(fit1$avg_steps,dec=TRUE))
max(fit1$avg_steps)
fit1[fit1$avg_steps = max(fit1$avg_steps),]
fit1[fit1$avg_steps == max(fit1$avg_steps),]
fit1 = read.csv("activity.csv")
fit2 = aggregate(steps~date,FUN="mean",data=fit1)
fit2
?aggreage
?aggregate
ames(fit2)$steps = "avg_steps"
names(fit2)$steps = "avg_steps"
names(fit2)["steps"] = "avg_steps"
names(fit2)
names(fit2)[1] = "avg_steps"
fit2 = aggregate(steps~date,FUN="mean",data=fit1)
names(fit2)[2] = "avg_steps"
fit2$median_steps = aggregate(steps~date,FUN="median",data=fit1)
fit2$median_steps = aggregate(steps~date,FUN="median",data=fit1)$steps
?median
median(c(1.1,2.4,2,5.5))
fit2
aggregate(steps~date,FUN="median",data=fit1,na.rm=TRUE)$steps
aggregate(steps~date,FUN=median(na.rm=TRUE),data=fit1)$steps
aggregate(steps~date,FUN=median,na.action = na.omit, data = fit1)$steps
aggregate(steps~date,FUN="median",na.action = na.omit, data = fit1)$steps
aggregate(steps~date,FUN="mean",na.action = na.omit, data = fit1)$steps
aggregate(steps~date,FUN="mean", data = fit1)$steps
str(fit1)
mean(fit1[fit1$date = "2012-10-01",]$steps)
mean(fit1[fit1$date == "2012-10-01",]$steps)
mean(fit1[fit1$date == "2012-10-01",]$steps,rm.na = TRUE)
mean(fit1[fit1$date == "2012-10-01",]$steps,na.rm = TRUE)
fit1[fit1$date == "2012-10-01",]$steps
fit1[fit1$date == "2012-10-02",]$steps
fit1[fit1$date == "2012-10-03",]$steps
mean(fit1[fit1$date == "2012-10-03",]$steps,na.rm = TRUE)
median(fit1[fit1$date == "2012-10-03",]$steps,na.rm = TRUE)
median(fit1[fit1$steps != 0,]$steps,na.rm = TRUE)
fit1 = fit1[fit1$steps != 0]
fit1 = fit1[fit1$steps != 0,]
fit1 = read.csv("activity.csv")
str(fit1)
summary(fit1)
fit1 = fit1[fit1$steps != 0,]
fit2 = aggregate(steps~date,FUN="mean",data=fit1)
names(fit2)[2] = "avg_steps"
fit2$median_steps = aggregate(steps~date,FUN="median",data=fit1)
fit3 = aggregate(steps~interval,FUN="mean",data=fit1)
names(fit3)[2] = "avg_steps"
fit1 = read.csv("activity.csv")
str(fit1)
summary(fit1)
fit1 = fit1[fit1$steps != 0,]
fit2 = aggregate(steps~date,FUN="mean",data=fit1)
names(fit2)[2] = "avg_steps"
fit2$median_steps = aggregate(steps~date,FUN="median",data=fit1)$steps
fit3 = aggregate(steps~interval,FUN="mean",data=fit1)
names(fit3)[2] = "avg_steps"
fit1 = read.csv("activity.csv")
strptime(fit1$date,"%Y-%M-%D");
head(fit1$date)
as.date(fit1[1,"date"])
as.Date
as.Date(fit1[1,"date"])
fit1$date = as.Date(date)
fit1$date = as.Date(fit1$date)
fit1 = read.csv("activity.csv")
fit1$date = as.Date(fit1$date)
fit1 = fit1[fit1$steps != 0,]
fit2 = aggregate(steps~date,FUN="mean",data=fit1)
names(fit2)[2] = "avg_steps"
fit2$median_steps = aggregate(steps~date,FUN="median",data=fit1)$steps
fit3 = aggregate(steps~interval,FUN="mean",data=fit1)
names(fit3)[2] = "avg_steps"
fit1 = read.csv("activity.csv")
fit1 = fit1[fit1$steps != 0,]
fit1$date = as.Date(fit1$date)
fit2 = aggregate(steps~date,FUN="mean",data=fit1)
names(fit2)[2] = "avg_steps"
fit2$median_steps = aggregate(steps~date,FUN="median",data=fit1)$steps
fit3 = aggregate(steps~interval,FUN="mean",data=fit1)
names(fit3)[2] = "avg_steps"
fit1 = read.csv("activity.csv")
fit1 = read.csv("activity.csv")
fit1 = fit1[fit1$steps != 0 && !is.na(fit1$steps),]
fit1 = read.csv("activity.csv")
fit1 = fit1[fit1$steps != 0 & !is.na(fit1$steps),]
fit1$date = as.Date(fit1$date)
fit2 = aggregate(steps~date,FUN="mean",data=fit1)
names(fit2)[2] = "avg_steps"
fit2$median_steps = aggregate(steps~date,FUN="median",data=fit1)$steps
fit3 = aggregate(steps~interval,FUN="mean",data=fit1)
names(fit3)[2] = "avg_steps"
hist(fit2$steps)
hist(fit2$avg_steps)
fit_orig = read.csv("activity.csv")
test = aggregate(steps~date,FUN=function(x) c(avg_steps = "mean(x)"),data=fit1)
library(plyr)
test = aggregate(steps~date,FUN=function(x) c(avg_steps = "mean(x$steps)"),data=fit1)
test = (fit1,'date',function(x) c(avg_steps(x$steps)))
test = (fit1,'date',function(x) c(avg_steps = mean(x$steps)))
test = ddply(fit1,'date',function(x) c(avg_steps = mean(x$steps)))
test = ddply(fit1,'date',function(x) c(avg_steps = mean(x$steps), median_steps = median(x$steps)))
test = ddply(fit1,'interval',function(x) c(avg_steps = mean(x$steps))))
test = ddply(fit1,'interval',function(x) c(avg_steps = mean(x$steps)))
library(plyr)
fit_orig = read.csv("activity.csv")
fit1 = fit_orig[fit_orig$steps != 0 & !is.na(fit_orig$steps),]
fit1$date = as.Date(fit1$date)
fit2 = ddply(fit1,'date',function(x) c(avg_steps = mean(x$steps), median_steps = median(x$steps)))
fit3 = ddply(fit1,'interval',function(x) c(avg_steps = mean(x$steps)))
fit2 = ddply(fit1,'date',function(x) c(tot_steps = sum(x$steps),avg_steps = mean(x$steps), median_steps = median(x$steps)))
fit2 = ddply(fit1,'date',function(x) c(obs_count = count(x),tot_steps = sum(x$steps),avg_steps = mean(x$steps), median_steps = median(x$steps)))
fit2 = ddply(fit1,'date',function(x) c(obs_count = nrow(x),tot_steps = sum(x$steps),avg_steps = mean(x$steps), median_steps = median(x$steps)))
fit2[1,]
fit2[2,]
fit2[2,]$tot_steps/fit2[2,]$obs_count
hist(fit2$tot_steps)
histogram(fit2$tot_steps)
?histogram
histogram(fit2$tot_steps,type=count,xlab = "Steps per Day")
histogram(fit2$tot_steps,type="count",xlab = "Steps per Day")
histogram(fit2$tot_steps,type="count",xlab = "Steps per Day",ylab = "Number of Days")
fit1[fit1$steps == 0]
fit1[fit1$steps == 0,]
